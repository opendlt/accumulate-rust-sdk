[package]
name = "accumulate-client"
version = "0.1.0"
edition = "2021"
license = "MIT"
readme = "README.md"
authors = ["OpenDLT <dev@opendlt.dev>"]
description = "Accumulate Rust SDK (V2/V3 unified) with DevNet-first flows"
repository = "https://github.com/opendlt/accumulate-rust"

[features]
default = ["rustls-tls"]
rustls-tls = []

[dependencies]
serde = { version = "1", features = ["derive"] }
serde_json = "1"
reqwest = { version = "0.12", default-features = false, features = ["json", "rustls-tls"] }
tokio = { version = "1", features = ["rt-multi-thread", "macros", "time"] }
thiserror = "1"
anyhow = "1"
url = "2"
time = { version = "0.3", features = ["formatting", "parsing"] }
hex = "0.4"
base64 = "0.22"
sha2 = "0.10"
rand = "0.8"
ed25519-dalek = { version = "2", features = ["rand_core"] }
dotenvy = "0.15"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["fmt", "env-filter"] }
chrono = { version = "0.4", features = ["serde"] }

[dev-dependencies]
rstest = "0.21"
serde_json = "1"
assert_json_diff = "2"
tokio = { version = "1", features = ["rt", "macros", "time"] }

[lints.rust]
unsafe_code = "forbid"
missing_docs = "warn"
missing_debug_implementations = "warn"

[lints.clippy]
# Restriction lints for production code
dbg_macro = "deny"
todo = "deny"
unimplemented = "deny"
unwrap_used = "deny"
expect_used = "deny"
panic = "deny"
print_stdout = "deny"
print_stderr = "deny"

# Pedantic lints for code quality
pedantic = "warn"
nursery = "warn"

# Performance lints
perf = "warn"

# Cargo lints
cargo = "warn"

# Allow some pedantic lints that are too strict for our use case
module_name_repetitions = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"